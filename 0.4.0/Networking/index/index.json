{"interfaceLanguages":{"swift":[{"children":[{"title":"Building Blocks","type":"groupMarker"},{"children":[{"title":"Accessing Data","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingcomponent\/data(_:progress:)","title":"func data(HTTPRequestData, progress: (BytesReceived) async -> Void) async throws -> HTTPResponseData","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/data(_:progress:timeout:)","title":"func data(HTTPRequestData, progress: (BytesReceived) async -> Void, timeout: Duration) async throws -> HTTPResponseData","type":"method"},{"title":"Accessing Codable Values","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingcomponent\/value(_:)","title":"func value<Body>(Request<Body>) async throws -> (body: Body, response: HTTPResponseData)","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/value(_:as:decoder:)","title":"func value<Body>(HTTPRequestData, as: Body.Type, decoder: some Decoding<Data>) async throws -> (body: Body, response: HTTPResponseData)","type":"method"},{"title":"Configuring the behaviour of the Network Stack","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingcomponent\/automaticretry()","title":"func automaticRetry() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/delayed(by:)","title":"func delayed(by: Duration) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/duplicatesremoved()","title":"func duplicatesRemoved() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/numbered()","title":"func numbered() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/throttled(max:)","title":"func throttled(max: UInt) -> some NetworkingComponent","type":"method"},{"title":"Configuring the Network Stack for your Server","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingcomponent\/server(authority:)","title":"func server(authority: String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/server(headerfield:_:)","title":"func server(headerField: HTTPField.Name, String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/server(customheaderfield:_:)","title":"func server(customHeaderField: String, String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/server(path:)","title":"func server(path: String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/server(prefixpath:delimiter:)","title":"func server(prefixPath: String, delimiter: String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/server(queryitemsallowedcharacters:)","title":"func server(queryItemsAllowedCharacters: CharacterSet) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/server(scheme:)","title":"func server(scheme: String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/server(mutate:with:log:)","title":"func server<Value>(mutate: WritableKeyPath<HTTPRequestData, Value>, with: (Value) -> Value, log: (Logger?, HTTPRequestData) -> Void) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/server(mutaterequest:)","title":"func server(mutateRequest: (inout HTTPRequestData) -> Void) -> some NetworkingComponent","type":"method"},{"title":"Create a Custom Component","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingcomponent\/send(_:)","title":"func send(HTTPRequestData) -> ResponseStream<HTTPResponseData>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/networking\/networkingcomponent\/resolve(_:)-19wd","title":"func resolve(HTTPRequestData) -> HTTPRequestData","type":"method"}],"title":"NetworkingComponent Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/networkingcomponent\/resolve(_:)-4c4dw","title":"func resolve(HTTPRequestData) -> HTTPRequestData","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingcomponent\/authority","title":"var authority: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingcomponent\/cached(in:)","title":"func cached(in: Cache<HTTPRequestData, HTTPResponseData>) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/checkedstatuscode()","title":"func checkedStatusCode() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/instrument()","title":"func instrument() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/logged(using:signposter:onstart:onfailure:onsuccess:)","title":"func logged(using: Logger, signposter: OSSignposter?, onStart: LogStart?, onFailure: LogFailure?, onSuccess: LogSuccess?) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponent\/modified(_:)","title":"func modified(some NetworkingModifier) -> some NetworkingComponent","type":"method"}],"path":"\/documentation\/networking\/networkingcomponent","title":"NetworkingComponent","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/networking\/networkingmodifier\/resolve(upstream:request:)-8frkb","title":"func resolve(upstream: some NetworkingComponent, request: HTTPRequestData) -> HTTPRequestData","type":"method"}],"title":"NetworkingModifier Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/networkingmodifier\/resolve(upstream:request:)-7y27o","title":"func resolve(upstream: some NetworkingComponent, request: HTTPRequestData) -> HTTPRequestData","type":"method"},{"children":[{"children":[{"path":"\/documentation\/networking\/networkingmodifier\/send(upstream:request:)-8qvue","title":"func send(upstream: some NetworkingComponent, request: HTTPRequestData) -> ResponseStream<HTTPResponseData>","type":"method"}],"title":"NetworkingModifier Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/networkingmodifier\/send(upstream:request:)-8cg75","title":"func send(upstream: some NetworkingComponent, request: HTTPRequestData) -> ResponseStream<HTTPResponseData>","type":"method"}],"path":"\/documentation\/networking\/networkingmodifier","title":"NetworkingModifier","type":"protocol"},{"title":"Authentication","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingcomponent\/authenticated(with:)","title":"func authenticated<Delegate>(with: Delegate) -> some NetworkingComponent","type":"method"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationdelegate\/credentials","title":"Credentials","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationdelegate\/fetch(for:)","title":"func fetch(for: HTTPRequestData) async throws -> Self.Credentials","type":"method"},{"path":"\/documentation\/networking\/authenticationdelegate\/refresh(unauthorized:from:)","title":"func refresh(unauthorized: Self.Credentials, from: HTTPResponseData) async throws -> Self.Credentials","type":"method"}],"path":"\/documentation\/networking\/authenticationdelegate","title":"AuthenticationDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticatingcredentials\/apply(to:)","title":"func apply(to: HTTPRequestData) -> HTTPRequestData","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticatingcredentials\/method","title":"static var method: AuthenticationMethod","type":"property"}],"path":"\/documentation\/networking\/authenticatingcredentials","title":"AuthenticatingCredentials","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationmethod\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationmethod\/rawvalue","title":"let rawValue: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationmethod\/basic","title":"static let basic: AuthenticationMethod","type":"property"},{"path":"\/documentation\/networking\/authenticationmethod\/bearer","title":"static let bearer: AuthenticationMethod","type":"property"},{"path":"\/documentation\/networking\/authenticationmethod\/defaultoption","title":"static let defaultOption: AuthenticationMethod?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/authenticationmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationmethod\/includeinequalityevaluation","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"path":"\/documentation\/networking\/authenticationmethod\/httprequestdataoption-implementations","title":"HTTPRequestDataOption Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/networking\/authenticationmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/authenticationmethod","title":"AuthenticationMethod","type":"struct"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationerror\/fetchcredentialsfailed(_:_:_:)","title":"case fetchCredentialsFailed(HTTPRequestData, AuthenticationMethod, any Error)","type":"case"},{"path":"\/documentation\/networking\/authenticationerror\/refreshcredentialsfailed(_:_:_:)","title":"case refreshCredentialsFailed(HTTPResponseData, AuthenticationMethod, any Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/networking\/authenticationerror\/==(_:_:)","title":"static func == (AuthenticationError, AuthenticationError) -> Bool","type":"op"}],"path":"\/documentation\/networking\/authenticationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationerror\/asnetworkingerror","title":"var asNetworkingError: (any NetworkingError)?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/httpbodystringrepresentation","title":"var httpBodyStringRepresentation: String?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/httprequest","title":"var httpRequest: HTTPRequestData?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/httpresponse","title":"var httpResponse: HTTPResponseData?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/networking\/authenticationerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationerror\/asnetworkingerror","title":"var asNetworkingError: (any NetworkingError)?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/httpbodystringrepresentation","title":"var httpBodyStringRepresentation: String?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/httprequest","title":"var httpRequest: HTTPRequestData?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/httpresponse","title":"var httpResponse: HTTPResponseData?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/networking\/authenticationerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationerror\/bodystringrepresentation","title":"var bodyStringRepresentation: String","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/isnotconnectedtointernet","title":"var isNotConnectedToInternet: Bool","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/isunauthorizedresponse","title":"var isUnauthorizedResponse: HTTPResponseData?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/request","title":"var request: HTTPRequestData","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/requestdidtimeout","title":"var requestDidTimeout: HTTPRequestData?","type":"property"},{"path":"\/documentation\/networking\/authenticationerror\/response","title":"var response: HTTPResponseData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/authenticationerror\/decoderesponsebody(as:using:)","title":"func decodeResponseBody<ErrorMessage>(as: ErrorMessage.Type, using: some Decoding<Data>) -> ErrorMessage?","type":"method"},{"path":"\/documentation\/networking\/authenticationerror\/decoderesponsebodyintojson(as:)","title":"func decodeResponseBodyIntoJSON<ErrorMessage>(as: ErrorMessage.Type) -> ErrorMessage?","type":"method"}],"path":"\/documentation\/networking\/authenticationerror\/networkingerror-implementations","title":"NetworkingError Implementations","type":"symbol"}],"path":"\/documentation\/networking\/authenticationerror","title":"AuthenticationError","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/headerbasedauthentication\/init(delegate:)","title":"init(delegate: Delegate)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/headerbasedauthentication\/fetch(for:)","title":"func fetch(for: HTTPRequestData) async throws -> HeaderBasedAuthentication<Delegate>.Credentials","type":"method"},{"path":"\/documentation\/networking\/headerbasedauthentication\/refresh(unauthorized:from:)","title":"func refresh(unauthorized: HeaderBasedAuthentication<Delegate>.Credentials, from: HTTPResponseData) async throws -> HeaderBasedAuthentication<Delegate>.Credentials","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/networking\/headerbasedauthentication\/credentials","title":"HeaderBasedAuthentication.Credentials","type":"typealias"}],"path":"\/documentation\/networking\/headerbasedauthentication\/authenticationdelegate-implementations","title":"AuthenticationDelegate Implementations","type":"symbol"}],"path":"\/documentation\/networking\/headerbasedauthentication","title":"HeaderBasedAuthentication","type":"struct"},{"path":"\/documentation\/networking\/basicauthentication","title":"BasicAuthentication","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/basiccredentials\/init(user:password:)","title":"init(user: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/basiccredentials\/password","title":"let password: String","type":"property"},{"path":"\/documentation\/networking\/basiccredentials\/user","title":"let user: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/basiccredentials\/apply(to:)","title":"func apply(to: HTTPRequestData) -> HTTPRequestData","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/basiccredentials\/defaultoption","title":"static let defaultOption: BasicCredentials?","type":"property"},{"path":"\/documentation\/networking\/basiccredentials\/method","title":"static let method: AuthenticationMethod","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/basiccredentials\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/basiccredentials\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/basiccredentials\/includeinequalityevaluation","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"path":"\/documentation\/networking\/basiccredentials\/httprequestdataoption-implementations","title":"HTTPRequestDataOption Implementations","type":"symbol"}],"path":"\/documentation\/networking\/basiccredentials","title":"BasicCredentials","type":"struct"},{"path":"\/documentation\/networking\/bearerauthentication","title":"BearerAuthentication","type":"typealias"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/bearercredentials\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/networking\/bearercredentials\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/bearercredentials\/token","title":"let token: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/bearercredentials\/apply(to:)","title":"func apply(to: HTTPRequestData) -> HTTPRequestData","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/bearercredentials\/defaultoption","title":"static let defaultOption: BearerCredentials?","type":"property"},{"path":"\/documentation\/networking\/bearercredentials\/method","title":"static let method: AuthenticationMethod","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/bearercredentials\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/bearercredentials\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/bearercredentials\/includeinequalityevaluation","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"path":"\/documentation\/networking\/bearercredentials\/httprequestdataoption-implementations","title":"HTTPRequestDataOption Implementations","type":"symbol"}],"path":"\/documentation\/networking\/bearercredentials","title":"BearerCredentials","type":"struct"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/activerequests\/key\/id","title":"let id: HTTPRequestData.ID","type":"property"},{"path":"\/documentation\/networking\/activerequests\/key\/number","title":"let number: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/activerequests\/key\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/activerequests\/key\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/activerequests\/key","title":"ActiveRequests.Key","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/activerequests\/value\/request","title":"let request: HTTPRequestData","type":"property"}],"path":"\/documentation\/networking\/activerequests\/value","title":"ActiveRequests.Value","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/activerequests\/active","title":"var active: [ActiveRequests.Key : ActiveRequests.Value]","type":"property"},{"path":"\/documentation\/networking\/activerequests\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/networking\/activerequests\/shouldmeasureelapsedtime","title":"var shouldMeasureElapsedTime: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/activerequests\/add(stream:for:)","title":"func add(stream: ResponseStream<HTTPResponseData>, for: HTTPRequestData) -> ActiveRequests.SharedStream","type":"method"},{"path":"\/documentation\/networking\/activerequests\/removestream(for:)","title":"func removeStream(for: HTTPRequestData)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/networking\/activerequests\/sharedstream","title":"ActiveRequests.SharedStream","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/activerequests\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/networking\/activerequests\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/networking\/activerequests\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/networking\/activerequests\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/networking\/activerequests","title":"ActiveRequests","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/progresstracker\/fractioncompleted()","title":"func fractionCompleted() -> Double","type":"method"},{"path":"\/documentation\/networking\/progresstracker\/overall()","title":"func overall() -> BytesReceived","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/progresstracker\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/networking\/progresstracker\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/networking\/progresstracker\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/networking\/progresstracker\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/networking\/progresstracker","title":"ProgressTracker","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/decoding\/input","title":"Input","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/decoding\/decode(_:from:)","title":"func decode<Body>(Body.Type, from: Self.Input) throws -> Body","type":"method"}],"path":"\/documentation\/networking\/decoding","title":"Decoding","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/encoding\/output","title":"Output","type":"associatedtype"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/encoding\/encode(_:)","title":"func encode<Body>(Body) throws -> Self.Output","type":"method"}],"path":"\/documentation\/networking\/encoding","title":"Encoding","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/networking\/httprequestbody\/additionalheaders-9azu7","title":"var additionalHeaders: HTTPFields","type":"property"}],"title":"HTTPRequestBody Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httprequestbody\/additionalheaders-35ev2","title":"var additionalHeaders: HTTPFields","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/httprequestbody\/isempty-4nvy2","title":"var isEmpty: Bool","type":"property"}],"title":"HTTPRequestBody Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httprequestbody\/isempty-5rk8g","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/networking\/httprequestbody\/isnotempty","title":"var isNotEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestbody\/encode()","title":"func encode() throws -> Data","type":"method"}],"path":"\/documentation\/networking\/httprequestbody","title":"HTTPRequestBody","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdataoption\/value","title":"Value","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdataoption\/defaultoption","title":"static var defaultOption: Self.Value","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/httprequestdataoption\/includeinequalityevaluation-8b38r","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"title":"HTTPRequestDataOption Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httprequestdataoption\/includeinequalityevaluation-82j7w","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"path":"\/documentation\/networking\/httprequestdataoption","title":"HTTPRequestDataOption","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponsemetadata\/value","title":"Value","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponsemetadata\/defaultmetadata","title":"static var defaultMetadata: Self.Value","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/httpresponsemetadata\/includeinequalityevaluation-7igo3","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"title":"HTTPResponseMetadata Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/httpresponsemetadata\/includeinequalityevaluation-9atp6","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"path":"\/documentation\/networking\/httpresponsemetadata","title":"HTTPResponseMetadata","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/networking\/networkenvironmentkey\/value","title":"Value","type":"associatedtype"}],"path":"\/documentation\/networking\/networkenvironmentkey","title":"NetworkEnvironmentKey","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingerror\/bodystringrepresentation","title":"var bodyStringRepresentation: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/networkingerror\/isnotconnectedtointernet-3n814","title":"var isNotConnectedToInternet: Bool","type":"property"}],"title":"NetworkingError Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/networkingerror\/isnotconnectedtointernet-nqeh","title":"var isNotConnectedToInternet: Bool","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/networkingerror\/isunauthorizedresponse-48fqw","title":"var isUnauthorizedResponse: HTTPResponseData?","type":"property"}],"title":"NetworkingError Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/networkingerror\/isunauthorizedresponse-9jsww","title":"var isUnauthorizedResponse: HTTPResponseData?","type":"property"},{"path":"\/documentation\/networking\/networkingerror\/request","title":"var request: HTTPRequestData","type":"property"},{"children":[{"children":[{"path":"\/documentation\/networking\/networkingerror\/requestdidtimeout-60sy3","title":"var requestDidTimeout: HTTPRequestData?","type":"property"}],"title":"NetworkingError Implementations","type":"groupMarker"}],"path":"\/documentation\/networking\/networkingerror\/requestdidtimeout-9hz3y","title":"var requestDidTimeout: HTTPRequestData?","type":"property"},{"path":"\/documentation\/networking\/networkingerror\/response","title":"var response: HTTPResponseData?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingerror\/decoderesponsebody(as:using:)","title":"func decodeResponseBody<ErrorMessage>(as: ErrorMessage.Type, using: some Decoding<Data>) -> ErrorMessage?","type":"method"},{"path":"\/documentation\/networking\/networkingerror\/decoderesponsebodyintojson(as:)","title":"func decodeResponseBodyIntoJSON<ErrorMessage>(as: ErrorMessage.Type) -> ErrorMessage?","type":"method"}],"path":"\/documentation\/networking\/networkingerror","title":"NetworkingError","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/retryingstrategy\/retrydelay(request:after:date:calendar:)","title":"func retryDelay(request: HTTPRequestData, after: [Result<HTTPResponseData, any Error>], date: Date, calendar: Calendar) async -> Duration?","type":"method"}],"path":"\/documentation\/networking\/retryingstrategy","title":"RetryingStrategy","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/backoffretrystrategy\/init(block:)","title":"init(block: (HTTPRequestData, [Result<HTTPResponseData, any Error>], Date, Calendar) -> Duration?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/backoffretrystrategy\/retrydelay(request:after:date:calendar:)","title":"func retryDelay(request: HTTPRequestData, after: [Result<HTTPResponseData, any Error>], date: Date, calendar: Calendar) async -> Duration?","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/backoffretrystrategy\/constant(delay:maxattemptcount:)","title":"static func constant(delay: Duration, maxAttemptCount: UInt) -> BackoffRetryStrategy","type":"method"},{"path":"\/documentation\/networking\/backoffretrystrategy\/exponential(maxdelay:maxattemptcount:)","title":"static func exponential(maxDelay: Duration, maxAttemptCount: UInt) -> BackoffRetryStrategy","type":"method"},{"path":"\/documentation\/networking\/backoffretrystrategy\/immediate(maxattemptcount:)","title":"static func immediate(maxAttemptCount: UInt) -> BackoffRetryStrategy","type":"method"}],"path":"\/documentation\/networking\/backoffretrystrategy","title":"BackoffRetryStrategy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/bytesreceived\/init(data:)","title":"init(data: Data)","type":"init"},{"path":"\/documentation\/networking\/bytesreceived\/init(received:expected:)","title":"init(received: Int64, expected: Int64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/bytesreceived\/expected","title":"var expected: Int64","type":"property"},{"path":"\/documentation\/networking\/bytesreceived\/fractioncompleted","title":"var fractionCompleted: Double","type":"property"},{"path":"\/documentation\/networking\/bytesreceived\/received","title":"var received: Int64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/bytesreceived\/receivebytes(count:)","title":"func receiveBytes(count: Int64)","type":"method"},{"path":"\/documentation\/networking\/bytesreceived\/withexpectedbytes(from:)","title":"func withExpectedBytes(from: HTTPResponseData) -> BytesReceived","type":"method"},{"path":"\/documentation\/networking\/bytesreceived\/withexpectedcontentlength(from:)","title":"func withExpectedContentLength(from: HTTPRequestData) -> BytesReceived","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/bytesreceived\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/bytesreceived\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/bytesreceived","title":"BytesReceived","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/databody\/init(data:additionalheaders:)","title":"init(data: Data, additionalHeaders: HTTPFields)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/databody\/additionalheaders","title":"let additionalHeaders: HTTPFields","type":"property"},{"path":"\/documentation\/networking\/databody\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/databody\/encode()","title":"func encode() throws -> Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/databody\/isnotempty","title":"var isNotEmpty: Bool","type":"property"}],"path":"\/documentation\/networking\/databody\/httprequestbody-implementations","title":"HTTPRequestBody Implementations","type":"symbol"}],"path":"\/documentation\/networking\/databody","title":"DataBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/elapsedtimemeasurement\/init(label:duration:instant:)","title":"init(label: String, duration: Duration, instant: AnyClock<Duration>.Instant)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/elapsedtimemeasurement\/duration","title":"let duration: Duration","type":"property"},{"path":"\/documentation\/networking\/elapsedtimemeasurement\/label","title":"let label: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/elapsedtimemeasurement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/elapsedtimemeasurement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/elapsedtimemeasurement","title":"ElapsedTimeMeasurement","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/emptybody\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/emptybody\/isempty","title":"let isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/emptybody\/encode()","title":"func encode() throws -> Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/emptybody\/additionalheaders","title":"var additionalHeaders: HTTPFields","type":"property"},{"path":"\/documentation\/networking\/emptybody\/isnotempty","title":"var isNotEmpty: Bool","type":"property"}],"path":"\/documentation\/networking\/emptybody\/httprequestbody-implementations","title":"HTTPRequestBody Implementations","type":"symbol"}],"path":"\/documentation\/networking\/emptybody","title":"EmptyBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdata\/init(method:scheme:authority:path:headerfields:body:)-12341","title":"init(method: HTTPRequest.Method, scheme: String, authority: String, path: String, headerFields: HTTPFields, body: any HTTPRequestBody) throws","type":"init"},{"path":"\/documentation\/networking\/httprequestdata\/init(method:scheme:authority:path:headerfields:body:)-32724","title":"init(method: HTTPRequest.Method, scheme: String, authority: String, path: String, headerFields: HTTPFields, body: Data?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdata\/authenticationmethod","title":"var authenticationMethod: AuthenticationMethod?","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/authority","title":"var authority: String","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/basiccredentials","title":"var basicCredentials: BasicCredentials?","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/bearercredentials","title":"var bearerCredentials: BearerCredentials?","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/body","title":"var body: Data?","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/cacheoption","title":"var cacheOption: CacheOption","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/expectedcontentlength","title":"var expectedContentLength: Int64?","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/headerfields","title":"var headerFields: HTTPFields","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/id-swift.property","title":"let id: HTTPRequestData.ID","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/method","title":"var method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/port","title":"var port: Int?","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/prettyprintedbody","title":"var prettyPrintedBody: String","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/prettyprintedheaders","title":"var prettyPrintedHeaders: String","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/prettyprintedidentifier","title":"var prettyPrintedIdentifier: String","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/queryitems","title":"var queryItems: [URLQueryItem]?","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/queryitemsallowedcharacters","title":"var queryItemsAllowedCharacters: CharacterSet","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/requesttimeoutinseconds","title":"var requestTimeoutInSeconds: Int64","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/retryingstrategy","title":"var retryingStrategy: (any RetryingStrategy)?","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/scheme","title":"var scheme: String","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/throttle","title":"var throttle: ThrottleOption","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/url","title":"var url: URL?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdata\/subscript(dynamicmember:)","title":"subscript(dynamicMember _: String) -> String?","type":"subscript"},{"path":"\/documentation\/networking\/httprequestdata\/subscript(option:)","title":"subscript<Option>(option _: Option.Type) -> Option.Value","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdata\/id-swift.typealias","title":"HTTPRequestData.ID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdata\/defaults\/authority","title":"static let authority: String","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/defaults\/method","title":"static let method: HTTPRequest.Method","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/defaults\/path","title":"static let path: String","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/defaults\/queryitemsallowedcharacters","title":"static let queryItemsAllowedCharacters: CharacterSet","type":"property"},{"path":"\/documentation\/networking\/httprequestdata\/defaults\/scheme","title":"static let scheme: String","type":"property"}],"path":"\/documentation\/networking\/httprequestdata\/defaults","title":"HTTPRequestData.Defaults","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdata\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/networking\/httprequestdata\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/networking\/httprequestdata\/==(_:_:)","title":"static func == (HTTPRequestData, HTTPRequestData) -> Bool","type":"op"}],"path":"\/documentation\/networking\/httprequestdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httprequestdata\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/networking\/httprequestdata\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/httprequestdata","title":"HTTPRequestData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponsedata\/init(request:data:urlresponse:)","title":"init(request: HTTPRequestData, data: Data, urlResponse: URLResponse?) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponsedata\/cachedoriginalrequest","title":"var cachedOriginalRequest: HTTPRequestData?","type":"property"},{"path":"\/documentation\/networking\/httpresponsedata\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/networking\/httpresponsedata\/iscached","title":"var isCached: Bool","type":"property"},{"path":"\/documentation\/networking\/httpresponsedata\/isnotcached","title":"var isNotCached: Bool","type":"property"},{"path":"\/documentation\/networking\/httpresponsedata\/prettyprintedbody","title":"var prettyPrintedBody: String","type":"property"},{"path":"\/documentation\/networking\/httpresponsedata\/prettyprintedheaders","title":"var prettyPrintedHeaders: String","type":"property"},{"path":"\/documentation\/networking\/httpresponsedata\/request","title":"var request: HTTPRequestData","type":"property"},{"path":"\/documentation\/networking\/httpresponsedata\/url","title":"var url: URL?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponsedata\/subscript(dynamicmember:)","title":"subscript<Value>(dynamicMember _: KeyPath<HTTPResponse, Value>) -> Value","type":"subscript"},{"path":"\/documentation\/networking\/httpresponsedata\/subscript(metadata:)","title":"subscript<Metadata>(metadata _: Metadata.Type) -> Metadata.Value","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponsedata\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/networking\/httpresponsedata\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponsedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/networking\/httpresponsedata\/==(_:_:)","title":"static func == (HTTPResponseData, HTTPResponseData) -> Bool","type":"op"}],"path":"\/documentation\/networking\/httpresponsedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/httpresponsedata\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/networking\/httpresponsedata\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/httpresponsedata","title":"HTTPResponseData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/jsonbody\/init(_:encoder:)","title":"init<Body>(Body, encoder: JSONEncoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/jsonbody\/additionalheaders","title":"var additionalHeaders: HTTPFields","type":"property"},{"path":"\/documentation\/networking\/jsonbody\/isempty","title":"let isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/jsonbody\/encode()","title":"func encode() throws -> Data","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/jsonbody\/isnotempty","title":"var isNotEmpty: Bool","type":"property"}],"path":"\/documentation\/networking\/jsonbody\/httprequestbody-implementations","title":"HTTPRequestBody Implementations","type":"symbol"}],"path":"\/documentation\/networking\/jsonbody","title":"JSONBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/networkenvironment\/init(_:)","title":"init(KeyPath<NetworkEnvironmentValues, Value>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/networkenvironment\/wrappedvalue","title":"var wrappedValue: Value","type":"property"}],"path":"\/documentation\/networking\/networkenvironment","title":"NetworkEnvironment","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/networkenvironmentvalues\/instrument","title":"var instrument: NetworkingInstrumentClient?","type":"property"},{"path":"\/documentation\/networking\/networkenvironmentvalues\/logger","title":"var logger: Logger?","type":"property"},{"path":"\/documentation\/networking\/networkenvironmentvalues\/signposter","title":"var signposter: OSSignposter?","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/networking\/networkenvironmentvalues\/subscript(_:)","title":"subscript<Key>(Key.Type) -> Key.Value?","type":"subscript"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/networkenvironmentvalues\/current","title":"static var current: NetworkEnvironmentValues","type":"property"}],"path":"\/documentation\/networking\/networkenvironmentvalues","title":"NetworkEnvironmentValues","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/networkinginstrumentclient\/elapsedtimemeasurements","title":"let elapsedTimeMeasurements: () async -> [ElapsedTimeMeasurement]","type":"property"},{"path":"\/documentation\/networking\/networkinginstrumentclient\/measureelapsedtime","title":"let measureElapsedTime: (String) async -> Void","type":"property"}],"path":"\/documentation\/networking\/networkinginstrumentclient","title":"NetworkingInstrumentClient","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/request\/init(http:)","title":"init(http: HTTPRequestData)","type":"init"},{"path":"\/documentation\/networking\/request\/init(http:as:decoder:transform:)","title":"init<Payload>(http: HTTPRequestData, as: Payload.Type, decoder: some Decoding<Data>, transform: (Payload, HTTPResponseData) throws -> Body)","type":"init"},{"path":"\/documentation\/networking\/request\/init(http:as:transform:)","title":"init<Payload>(http: HTTPRequestData, as: Payload.Type, transform: (Payload, HTTPResponseData) throws -> Body)","type":"init"},{"path":"\/documentation\/networking\/request\/init(http:decode:)","title":"init(http: HTTPRequestData, decode: (HTTPResponseData) throws -> Body)","type":"init"},{"path":"\/documentation\/networking\/request\/init(http:decoder:)","title":"init(http: HTTPRequestData, decoder: some Decoding<Data>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/request\/decode","title":"let decode: (HTTPResponseData) throws -> Body","type":"property"},{"path":"\/documentation\/networking\/request\/http","title":"let http: HTTPRequestData","type":"property"}],"path":"\/documentation\/networking\/request","title":"Request","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/requestsequence\/number","title":"static var number: Int","type":"property"}],"path":"\/documentation\/networking\/requestsequence","title":"RequestSequence","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/~=(_:_:)","title":"func ~= (HTTPRequestData, HTTPRequestData) -> Bool","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/networking\/logfailure","title":"LogFailure","type":"typealias"},{"path":"\/documentation\/networking\/logstart","title":"LogStart","type":"typealias"},{"path":"\/documentation\/networking\/logsuccess","title":"LogSuccess","type":"typealias"},{"path":"\/documentation\/networking\/responsestream","title":"ResponseStream","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/cacheoption\/always(_:)","title":"case always(TimeInterval)","type":"case"},{"path":"\/documentation\/networking\/cacheoption\/never","title":"case never","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/cacheoption\/defaultoption","title":"static let defaultOption: CacheOption","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/cacheoption\/includeinequalityevaluation","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"path":"\/documentation\/networking\/cacheoption\/httprequestdataoption-implementations","title":"HTTPRequestDataOption Implementations","type":"symbol"}],"path":"\/documentation\/networking\/cacheoption","title":"CacheOption","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/networkingcomponentbuilder\/buildblock(_:)","title":"static func buildBlock<C>(C) -> C","type":"method"},{"path":"\/documentation\/networking\/networkingcomponentbuilder\/buildeither(first:)","title":"static func buildEither<C0, C1>(first: C0) -> _ConditionalComponent<C0, C1>","type":"method"},{"path":"\/documentation\/networking\/networkingcomponentbuilder\/buildeither(second:)","title":"static func buildEither<C0, C1>(second: C1) -> _ConditionalComponent<C0, C1>","type":"method"},{"path":"\/documentation\/networking\/networkingcomponentbuilder\/buildexpression(_:)","title":"static func buildExpression<C>(C) -> C","type":"method"},{"path":"\/documentation\/networking\/networkingcomponentbuilder\/buildfinalresult(_:)","title":"static func buildFinalResult<C>(C) -> C","type":"method"},{"path":"\/documentation\/networking\/networkingcomponentbuilder\/buildlimitedavailability(_:)","title":"static func buildLimitedAvailability<C>(C) -> _ErasedComponent","type":"method"},{"path":"\/documentation\/networking\/networkingcomponentbuilder\/buildoptional(_:)","title":"static func buildOptional<C>(C?) -> C?","type":"method"}],"path":"\/documentation\/networking\/networkingcomponentbuilder","title":"NetworkingComponentBuilder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/partial\/progress(_:)","title":"case progress(Progress)","type":"case"},{"path":"\/documentation\/networking\/partial\/value(_:_:)","title":"case value(Value, Progress)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/partial\/progress","title":"var progress: Progress","type":"property"},{"path":"\/documentation\/networking\/partial\/value","title":"var value: Value?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/partial\/mapprogress(transform:)","title":"func mapProgress<NewProgress>(transform: (Progress) throws -> NewProgress) rethrows -> Partial<Value, NewProgress>","type":"method"},{"path":"\/documentation\/networking\/partial\/mapvalue(transform:)","title":"func mapValue<NewValue>(transform: (Value) throws -> NewValue) rethrows -> Partial<NewValue, Progress>","type":"method"},{"path":"\/documentation\/networking\/partial\/onvalue(perform:)","title":"func onValue(perform: (Value) throws -> Void) rethrows -> Partial<Value, Progress>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/partial\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/partial\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/networking\/partial","title":"Partial","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/retryingstrategyrequestoption\/defaultoption","title":"static let defaultOption: (any RetryingStrategy)?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/retryingstrategyrequestoption\/includeinequalityevaluation","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"path":"\/documentation\/networking\/retryingstrategyrequestoption\/httprequestdataoption-implementations","title":"HTTPRequestDataOption Implementations","type":"symbol"}],"path":"\/documentation\/networking\/retryingstrategyrequestoption","title":"RetryingStrategyRequestOption","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/networking\/throttleoption\/always","title":"case always","type":"case"},{"path":"\/documentation\/networking\/throttleoption\/never","title":"case never","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/throttleoption\/defaultoption","title":"static var defaultOption: ThrottleOption","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/networking\/throttleoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/networking\/throttleoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/throttleoption\/includeinequalityevaluation","title":"static var includeInEqualityEvaluation: Bool","type":"property"}],"path":"\/documentation\/networking\/throttleoption\/httprequestdataoption-implementations","title":"HTTPRequestDataOption Implementations","type":"symbol"}],"path":"\/documentation\/networking\/throttleoption","title":"ThrottleOption","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/foundation\/urlsession\/authority","title":"var authority: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/networking\/foundation\/urlsession\/authenticated(with:)","title":"func authenticated<Delegate>(with: Delegate) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/automaticretry()","title":"func automaticRetry() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/cached(in:)","title":"func cached(in: Cache<HTTPRequestData, HTTPResponseData>) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/checkedstatuscode()","title":"func checkedStatusCode() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/data(_:progress:)","title":"func data(HTTPRequestData, progress: (BytesReceived) async -> Void) async throws -> HTTPResponseData","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/data(_:progress:timeout:)","title":"func data(HTTPRequestData, progress: (BytesReceived) async -> Void, timeout: Duration) async throws -> HTTPResponseData","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/delayed(by:)","title":"func delayed(by: Duration) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/duplicatesremoved()","title":"func duplicatesRemoved() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/instrument()","title":"func instrument() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/logged(using:signposter:onstart:onfailure:onsuccess:)","title":"func logged(using: Logger, signposter: OSSignposter?, onStart: LogStart?, onFailure: LogFailure?, onSuccess: LogSuccess?) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/modified(_:)","title":"func modified(some NetworkingModifier) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/numbered()","title":"func numbered() -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/resolve(_:)","title":"func resolve(HTTPRequestData) -> HTTPRequestData","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/send(_:)","title":"func send(HTTPRequestData) -> ResponseStream<HTTPResponseData>","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/server(authority:)","title":"func server(authority: String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/server(customheaderfield:_:)","title":"func server(customHeaderField: String, String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/server(headerfield:_:)","title":"func server(headerField: HTTPField.Name, String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/server(mutate:with:log:)","title":"func server<Value>(mutate: WritableKeyPath<HTTPRequestData, Value>, with: (Value) -> Value, log: (Logger?, HTTPRequestData) -> Void) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/server(mutaterequest:)","title":"func server(mutateRequest: (inout HTTPRequestData) -> Void) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/server(path:)","title":"func server(path: String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/server(prefixpath:delimiter:)","title":"func server(prefixPath: String, delimiter: String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/server(queryitemsallowedcharacters:)","title":"func server(queryItemsAllowedCharacters: CharacterSet) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/server(scheme:)","title":"func server(scheme: String) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/throttled(max:)","title":"func throttled(max: UInt) -> some NetworkingComponent","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/value(_:)","title":"func value<Body>(Request<Body>) async throws -> (body: Body, response: HTTPResponseData)","type":"method"},{"path":"\/documentation\/networking\/foundation\/urlsession\/value(_:as:decoder:)","title":"func value<Body>(HTTPRequestData, as: Body.Type, decoder: some Decoding<Data>) async throws -> (body: Body, response: HTTPResponseData)","type":"method"}],"path":"\/documentation\/networking\/foundation\/urlsession\/networkingcomponent-implementations","title":"NetworkingComponent Implementations","type":"symbol"}],"path":"\/documentation\/networking\/foundation\/urlsession","title":"URLSession","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/networking\/foundation\/urlrequest\/init(http:)","title":"init?(http: HTTPRequestData)","type":"init"}],"path":"\/documentation\/networking\/foundation\/urlrequest","title":"URLRequest","type":"extension"}],"path":"\/documentation\/networking\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httptypes\/httpfield\/name\/requirehashprivatelogging","title":"var requireHashPrivateLogging: Bool","type":"property"},{"path":"\/documentation\/networking\/httptypes\/httpfield\/name\/requiresprivatelogging","title":"var requiresPrivateLogging: Bool","type":"property"}],"path":"\/documentation\/networking\/httptypes\/httpfield\/name","title":"HTTPField.Name","type":"extension"}],"path":"\/documentation\/networking\/httptypes\/httpfield","title":"HTTPField","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/httptypes\/httpresponse\/status\/isfailure","title":"var isFailure: Bool","type":"property"},{"path":"\/documentation\/networking\/httptypes\/httpresponse\/status\/isservererror","title":"var isServerError: Bool","type":"property"},{"path":"\/documentation\/networking\/httptypes\/httpresponse\/status\/issuccess","title":"var isSuccess: Bool","type":"property"}],"path":"\/documentation\/networking\/httptypes\/httpresponse\/status","title":"HTTPResponse.Status","type":"extension"}],"path":"\/documentation\/networking\/httptypes\/httpresponse","title":"HTTPResponse","type":"extension"}],"path":"\/documentation\/networking\/httptypes","title":"HTTPTypes","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/swift\/error\/asnetworkingerror","title":"var asNetworkingError: (any NetworkingError)?","type":"property"},{"path":"\/documentation\/networking\/swift\/error\/httpbodystringrepresentation","title":"var httpBodyStringRepresentation: String?","type":"property"},{"path":"\/documentation\/networking\/swift\/error\/httprequest","title":"var httpRequest: HTTPRequestData?","type":"property"},{"path":"\/documentation\/networking\/swift\/error\/httpresponse","title":"var httpResponse: HTTPResponseData?","type":"property"}],"path":"\/documentation\/networking\/swift\/error","title":"Error","type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/networking\/swift\/result\/httprequest","title":"var httpRequest: HTTPRequestData?","type":"property"},{"path":"\/documentation\/networking\/swift\/result\/request","title":"var request: HTTPRequestData","type":"property"}],"path":"\/documentation\/networking\/swift\/result","title":"Result","type":"extension"}],"path":"\/documentation\/networking\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/networking","title":"Networking","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}